C51 COMPILER V9.54   SERVICE_FUN                                                           10/14/2024 11:20:40 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE SERVICE_FUN
OBJECT MODULE PLACED IN ..\OUTPUT\service_fun.obj
COMPILER INVOKED BY: E:\Keil_C51\C51\BIN\C51.EXE ..\SOURCE\service_fun.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\SOURCE) DEBU
                    -G OBJECTEXTEND PRINT(..\LISTING\service_fun.lst) TABS(2) OBJECT(..\OUTPUT\service_fun.obj)

line level    source

   1          /*******************************************************
   2          file.name : service_fun.c
   3          version : 1.1
   4          description : 存放了一些用于程序运行的功能函数
   5          *******************************************************/
   6          
   7          // 包含的头文件
   8          #include "service_fun.h"
   9          #include <reg51.h>
  10          #include "key.h"
  11          #include "led.h"
  12          
  13          // 宏定义
  14          #define       WINDOW1       2
  15          #define       WINDOW2       3
  16          #define       WINDOW3       4
  17          #define       STOPWATCH_WINDOW  5
  18          #define       CLOCK_MOD     6
  19          #define       STOPWATCH_MOD   7
  20          
  21          // 定义的变量
  22          unsigned int second = 0;
  23          unsigned int mins = 21;
  24          unsigned int hours = 11;
  25          unsigned int day = 1;
  26          unsigned int mounth = 1;
  27          unsigned int year = 2000;
  28          unsigned int stopwatch = 0;
  29          int min_time = 0; 
  30          
  31          unsigned char window1_num[] = "0000";  // 用于计数，窗口1
  32          unsigned char window2_num[] = "0000";  // 用于计数，窗口2
  33          unsigned char window3_num[] = "0000";  // 用于计数，窗口3
  34          unsigned char stopwatch_window_num[] = "0000";  // 用于计数，秒表窗口
  35          unsigned char windows = WINDOW1;       // 窗口标记，默认为窗口1
  36          unsigned char Mod = CLOCK_MOD;         // 模式标记，默认为时钟模式
  37          
  38          // 该函数用于日历的进位计算
  39          void time_carry()
  40          {
  41   1        if(min_time == 1000)
  42   1        {
  43   2          mins++;
  44   2          min_time = 0;
  45   2        }
  46   1        if(mins == 60)   //60分钟进1小时
  47   1        {
  48   2          hours++;
  49   2          mins = 0;
  50   2        }
  51   1        if(hours == 24)  //24小时进1天
  52   1        {
  53   2          day++;
  54   2          hours = 0;
C51 COMPILER V9.54   SERVICE_FUN                                                           10/14/2024 11:20:40 PAGE 2   

  55   2        }
  56   1      
  57   1        // 年月日进位
  58   1          if((year%4 == 0)&&(year%100 != 0)||(year%400 == 0))   // 闰年
  59   1          {
  60   2              switch (mounth)
  61   2              {
  62   3              case 1:
  63   3              case 3:
  64   3              case 5:
  65   3              case 7:
  66   3              case 8:
  67   3              case 10:
  68   3              if(day > 31)
  69   3                  {
  70   4                      mounth++;
  71   4                      day = 1;
  72   4                  }
  73   3                  break;
  74   3              case 12:
  75   3                  if(day > 31)
  76   3                  {
  77   4                      year++;
  78   4                      mounth = 1;
  79   4                      day = 1;
  80   4                  }
  81   3                  break;
  82   3              case 2:
  83   3                  if(day > 29)
  84   3                  {
  85   4                      mounth++;
  86   4                      day = 1;
  87   4                  }
  88   3                  break;
  89   3              case 4:
  90   3              case 6:
  91   3              case 9:
  92   3              case 11:
  93   3                  if(day > 30)
  94   3                  {
  95   4                      mounth++;
  96   4                      day = 1;
  97   4                  }
  98   3                  break;
  99   3              default:
 100   3                  break;
 101   3              }
 102   2          }
 103   1          else
 104   1        {
 105   2              switch (mounth)
 106   2              {
 107   3              case 1:
 108   3              case 3:
 109   3              case 5:
 110   3              case 7:
 111   3              case 8:
 112   3              case 10:
 113   3              if(day > 31)
 114   3                  {
 115   4                      mounth++;
 116   4                      day = 1;
C51 COMPILER V9.54   SERVICE_FUN                                                           10/14/2024 11:20:40 PAGE 3   

 117   4                  }
 118   3                  break;
 119   3              case 12:
 120   3                  if(day > 31)
 121   3                  {
 122   4                      year++;
 123   4                      mounth = 1;
 124   4                      day = 1;
 125   4                  }
 126   3                  break;
 127   3              case 2:
 128   3                  if(day > 28)
 129   3                  {
 130   4                      mounth++;
 131   4                      day = 1;
 132   4                  }
 133   3                  break;
 134   3              case 4:
 135   3              case 6:
 136   3              case 9:
 137   3              case 11:
 138   3                  if(day > 30)
 139   3                  {
 140   4                      mounth++;
 141   4                      day = 1;
 142   4                  }
 143   3                  break;
 144   3              default:
 145   3                  break;
 146   3              }
 147   2        }
 148   1      }
 149          
 150          // 该函数用于数字转字符串,将四位整数转化为字符串
 151          // 注意数字为无符号整数，一定要大于0
 152          void num2str(unsigned int num,unsigned char* str)
 153          {
 154   1        str[3] = num%10+'0';
 155   1        str[2] = (num/10)%10+'0';
 156   1        str[1] = (num/100)%10+'0';
 157   1        str[0] = (num/1000)%10+'0';
 158   1      }
 159          
 160          // 该函数用于显示对应窗口
 161          void display_windows()
 162          {
 163   1        switch (Mod)
 164   1        {
 165   2        case CLOCK_MOD:
 166   2          switch (windows)
 167   2          {
 168   3          case WINDOW1:
 169   3            display_str_once(window1_num);
 170   3            break;
 171   3          case WINDOW2:
 172   3            display_str_once(window2_num);
 173   3            break;
 174   3          case WINDOW3:
 175   3            display_str_once(window3_num);
 176   3            break;
 177   3          default:
 178   3            display_str_once("----");
C51 COMPILER V9.54   SERVICE_FUN                                                           10/14/2024 11:20:40 PAGE 4   

 179   3            break;
 180   3          }
 181   2          break;
 182   2        case STOPWATCH_MOD:
 183   2          display_str_once(stopwatch_window_num);
 184   2          break;
 185   2        default:
 186   2          break;
 187   2        }
 188   1      }
 189          
 190          void key1_fucntions()
 191          {
 192   1        // 当模式为时钟模式的时候，按键1的作用是切换窗口，分别显示年月时分
 193   1        if(((Key_State_Scan(MODEL1)>>0) & 1 )&&(Mod == CLOCK_MOD))
 194   1        {
 195   2          windows++;
 196   2          if(windows == WINDOW3 + 1)
 197   2          {
 198   3            windows = WINDOW1;
 199   3          }
 200   2        }
 201   1        // 当模式为秒表模式的时候，按键1的作用是开始和停止秒表
 202   1        if(((Key_State_Scan(MODEL1)>>0) & 1 )&&(Mod == STOPWATCH_MOD))
 203   1        {
 204   2          // ~stopwatch_state;
 205   2        }
 206   1      }
 207          
 208          void key3_switch_mod()
 209          {
 210   1        if((Key_State_Scan(MODEL1)>>2) & 1)
 211   1        {
 212   2          Mod++;
 213   2          if(Mod == STOPWATCH_MOD+1)
 214   2          {
 215   3            Mod = CLOCK_MOD;
 216   3          }
 217   2        }
 218   1      }
 219          
 220          
 221          // 窗口分配：window1 用于时钟
 222          void clock() interrupt 1
 223          {
 224   1        // 标志位清零
 225   1        TF0 = 0;
 226   1        // min_time为60ms
 227   1        TL0 = (65536 - 60000)%256;
 228   1        TH0 = (65536 - 60000)/256;
 229   1        min_time++;
 230   1        time_carry();  // 日历进位操作
 231   1        num2str(mins+hours*100,window1_num);
 232   1        num2str(day+mounth*100,window2_num);
 233   1        num2str(year,window3_num);
 234   1      }
 235          
 236          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    818    ----
C51 COMPILER V9.54   SERVICE_FUN                                                           10/14/2024 11:20:40 PAGE 5   

   CONSTANT SIZE    =      5    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     38       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
