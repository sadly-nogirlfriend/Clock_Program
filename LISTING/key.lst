C51 COMPILER V9.54   KEY                                                                   11/06/2024 16:06:51 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE KEY
OBJECT MODULE PLACED IN ..\OUTPUT\key.obj
COMPILER INVOKED BY: E:\Keil_C51\C51\BIN\C51.EXE ..\SOURCE\key.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\SOURCE) DEBUG OBJECT
                    -EXTEND PRINT(..\LISTING\key.lst) TABS(2) OBJECT(..\OUTPUT\key.obj)

line level    source

   1          /*******************************************************
   2          file.name : key.c
   3          version : 1.1
   4          description : 存放了一些用于按键的功能函数
   5          *******************************************************/
   6          
   7          #include "key.h"
   8          #include "led.h"
   9          #include <reg51.h>
  10          #include "timer.h"
  11          
  12          // 定义按键的状态
  13          #define       KEY1_ON       0x1     //0000 0001
  14          #define       KEY2_ON       0x2     //0000 0010
  15          #define       KEY3_ON       0x4       //0000 0100
  16          #define       KEY4_ON       0x8     //0000 1000
  17          #define       KEY5_ON       0x10    //0001 0000
  18          #define       KEY6_ON       0x20    //0010 0000
  19          
  20          // 定义按键io口
  21          sbit key1 = P0^0;
  22          sbit key2 = P0^1;
  23          sbit key3 = P0^2;
  24          sbit key4 = P0^3;
  25          sbit key5 = P0^4;
  26          sbit key6 = P0^5;
  27          // 定义变量
  28          unsigned char key_state = 0x0;
  29          unsigned char mark = 0;
  30          
  31          // 扫描指定的io口电平，查看开关的开合
  32          // 输出的是一个四位二进制数，其对应的二进制数就是开关开合的状态
  33          // 从低位到高位是开关1到4
  34          // 按键的扫描有两个模式:
  35          // MODEL1为按钮模式，按下为1，松开为0
  36          // MODEL2为开关模式，按键切换1和0的状态
  37          unsigned char Key_State_Scan(unsigned char model)
  38          {
  39   1        unsigned char key_state_1 = 0x0;
  40   1        if(model == MODEL1)   //模式1，使用局部变量
  41   1        {
  42   2          if(!key1 || !key2 || !key3 || !key4 || !key5 || !key6)  // 检测是否有按键被按下
  43   2          {
  44   3            if(mark == 0)
  45   3            {
  46   4              short_delay_5ms();    //消抖
  47   4              if(!key1)
  48   4              {
  49   5                key_state_1 = key_state_1 + KEY1_ON;  //按键赋值
  50   5              }
  51   4              if(!key2)
  52   4              {
  53   5                key_state_1 = key_state_1 + KEY2_ON;
  54   5              }
C51 COMPILER V9.54   KEY                                                                   11/06/2024 16:06:51 PAGE 2   

  55   4              if(!key3)
  56   4              {
  57   5                key_state_1 = key_state_1 + KEY3_ON;
  58   5              }
  59   4              if(!key4)
  60   4              {
  61   5                key_state_1 = key_state_1 + KEY4_ON;
  62   5              }
  63   4              if(!key5)
  64   4              {
  65   5                key_state_1 = key_state_1 + KEY5_ON;
  66   5              }
  67   4              if(!key6)
  68   4              {
  69   5                key_state_1 = key_state_1 + KEY6_ON;
  70   5              }
  71   4              mark = 1;
  72   4            }
  73   3          }
  74   2          else
  75   2          {
  76   3            mark = 0;
  77   3          }
  78   2          key_state = key_state_1;
  79   2        }
  80   1        if(model == MODEL2)   //模式2，使用静态变量
  81   1        {
  82   2          if(!key1 || !key2 || !key3 || !key4 || !key5 || !key6)  // 检测是否有按键被按下
  83   2          {
  84   3            if(mark == 0)
  85   3            {
  86   4              short_delay_5ms();    //消抖
  87   4              if(!key1)
  88   4              {
  89   5                key_state = key_state ^ (1 << 0);  //按键赋值，按位取反
  90   5              }
  91   4              if(!key2)
  92   4              {
  93   5                key_state = key_state ^ (1 << 1);
  94   5              }
  95   4              if(!key3)
  96   4              {
  97   5                key_state = key_state ^ (1 << 2);
  98   5              }
  99   4              if(!key4)
 100   4              {
 101   5                key_state = key_state ^ (1 << 3);
 102   5              }
 103   4              if(!key5)
 104   4              {
 105   5                key_state = key_state ^ (1 << 4);
 106   5              }
 107   4              if(!key6)
 108   4              {
 109   5                key_state = key_state ^ (1 << 5);
 110   5              }
 111   4            }
 112   3          }
 113   2          else
 114   2          {
 115   3            mark = 1;
 116   3          }
C51 COMPILER V9.54   KEY                                                                   11/06/2024 16:06:51 PAGE 3   

 117   2        }
 118   1        return key_state;
 119   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    170    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
